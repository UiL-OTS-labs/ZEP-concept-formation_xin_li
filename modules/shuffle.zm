/******************************************************************************\
FILE:           shuffle.zm
AUTHOR:         Theo Veenker <theo.veenker@beexy.nl>
ADAPTED BY:     -
 
DESCRIPTION:
 
Item table shuffling functions.
 
 
HISTORY:
2011-10-25 TV   Created.
 
\******************************************************************************/
 
 
// Shuffles test_items table (no restrictions on item order).
int shuffle_test_prac_items()
{ 
    int nitems = test_prac_items.size;
  
     // Depending on criteria and table contents it may happen that it takes
     // several attempts to make the shuffling succeed. We'll try it 100 times
     // before giving up.
     int nattempts;
     bool again = true;
     while (again && ++nattempts < 100)
     {
         // First shuffle the entire item table.
         again = false;
         test_prac_items.shuffle(0, -1);
  
         // Walk over the table and check for items conflicting with the
         // criterion. If an item conflicts, then swap it randomly with one
         // of the items not yet looked at.
         int n = 3;
         while (n < nitems)
         {
             int nitemswaps;
             while (
                 test_prac_items[n].expected_answer == test_prac_items[n-1].expected_answer &&
                 test_prac_items[n].expected_answer == test_prac_items[n-2].expected_answer &&
                 test_prac_items[n].expected_answer == test_prac_items[n-3].expected_answer)
             {
                 if (n+1 == nitems || ++nitemswaps == 10)
                 {
                     again = true;
                     break;
                 }
                 test_prac_items.swap(n, random(n, nitems - n));
             }
             if (again) break;
             n++;
         }
     }
  
     if (again)
         println("Unable to shuffle test_items according to criteria. "
             "Check table and/or criteria.");
     return again ? ERROR : OK;
    return OK;
}